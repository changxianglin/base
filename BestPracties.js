var __main = function() {
// 可维护的代码
// 可理解性、直观性、可适应性、可扩展性、可调试性

// 代码约定
// 可读性、函数和方法
// 大段代码
// 复杂的算法
// Hack

// 变量和函数命名
// 变量名应为名词开始
// 函数名应为动词开始
// 变量和函数应该符合逻辑的名字，后期可压缩

// 变量类型透明
// 驼峰命名

// 松散耦合
// 尽可能的维护弱耦合的代码

// 解耦 HTML/JavaScript
// 解耦 CSS/JavaScript
// 解耦应用逻辑 /　事件处理程序

// 编程实践
// 尊重对象的所有权
// 不要为实例或者原型添加属性
// 不要为实例或者原型添加方法
// 不要重定义已存在的方法

// 避免全局量

// 避免与 null 进行比较

// 性能
// 注意作用域
// 避免全局查找
// 避免 with 语句

// 选择正确方法
// 避免不必要的属性查找
// 最简单、最快捷的算法是常熟值即 O(1)
// O(1)常数(一般是简单值,或者存储在变量中的值)、O(log n)对数(二分法)、O(n)线性(遍历数据)、O(n的平方)平方(插入排序)
//  使用变量和数组比访问对象的属性更有效率、或者是一个 O(n)操作
// 优化循环
// 减少迭代、简化终止条件、简化循环体、使用测试循环、

// 最小化语句数
// 多个变量声明
// 插入迭代
// 使用数据和对象字面量

// 优化 DOM 交互
// 最小化现场更新
// 使用 innerHTML
// 使用事件代理
// 注意 HTMLCollection

// 部署
// 构建过程
// 知识产权问题
// 文件大小
// 组织代码
// 代码组织
// 验证
// JSlint
// 压缩
// 文件压缩
// HTTP 压缩
// 
}
